version: 2.1

# Define image variable
phpimg: &phpimg
  docker:
    - image: cimg/php:7.4.26
  working_directory: ~/online-application

commands:

# Define the jobs we want to run for this project
jobs:
  build:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run:
          name: Install Dependencies
          command: |
            amazon-linux-extras install docker -y;
      - run:
          name: Build and push image
          command: |
            export IMAGE_TAG=${CIRCLE_WORKFLOW_ID}
            echo ${AWS_DEFAULT_REGION}
            ./create-docker-env.sh
            ls
            # cat docker-env
            # docker build --tag ${ECR_REPOSITORY}/${APP_NAME}:${IMAGE_TAG} .
            # docker images 
            # docker login -u AWS -p $(aws ecr get-login-password) ${ECR_REPOSITORY}
            # docker push ${ECR_REPOSITORY}/${APP_NAME}:${IMAGE_TAG}
  
  prepare:
    <<: *phpimg
    steps:
      - checkout
      - run:
          name: prepare
          command: |
            pwd
            ls -al
            whoami
            ls -al app
            ls -al app/webroot
            mkdir -p build/{logs,pdepend,reports};
            mkdir -p app/webroot/{coverage,code-browser,api};
            mkdir -p app/tmp/{logs,tests,sessions,cache}
            mkdir -p app/tmp/cache/{persistent,models,views}
            cp app/Config/core.php.default app/Config/core.php;
            export COMPOSER_NO_INTERACTION=1
            sudo composer self-update;
            composer install;
            composer update;
      
      - persist_to_workspace:
          root: ~/online-application
          paths: "*"

  phpunit:
    <<: *phpimg
    steps:
      - checkout
      - attach_workspace:
          at: ~/online-application
      - run:
          name: phpunit
          command: |
            pwd
            ls -al
            whoami
            ls -al build
            ls -al app/webroot
            # Console/cake test --debug --log-junit '../build/reports/junit.xml' \
            #   --coverage-html 'webroot/coverage' \
            #   --coverage-clover '../build/reports/coverage-clover.xml' \
            #   --configuration '../phpunit.xml' app AllTests

  pdepend:
    <<: *phpimg
    steps:
      - checkout
      - attach_workspace:
          at: ~/online-application
      - run:
          name: pdepend
          command: |
            ls -al 
            ls -al build
            echo Hello

  phpmd-ci:
    <<: *phpimg
    steps:
      - checkout
      - run:
          name: phpmd-ci
          command: |
            echo Hello

  phpcpd:
    <<: *phpimg
    steps:
      - checkout
      - run:
          name: phpcpd
          command: |
            echo Hello

  phpcs-ci:
    <<: *phpimg
    steps:
      - checkout
      - run:
          name: phpcs-ci
          command: |
            echo Hello

  phploc:
    <<: *phpimg
    steps:
      - checkout
      - run:
          name: phploc
          command: |
            echo Hello

  phpdox:
    <<: *phpimg
    steps:
      - checkout
      - run:
          name: phpdox
          command: |
            echo Hello

# Orchestrate our job run sequence
workflows:
  build_and_test:
    jobs:
      - build
      - prepare
      - phpunit:
          requires: [prepare]
      - pdepend:
           requires: [phpunit]
      - phpmd-ci:
          requires: [pdepend]
      - phpcpd
      - phpcs-ci
      - phploc
      - phpdox
