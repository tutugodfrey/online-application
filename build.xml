<?xml version="1.0" encoding="UTF-8"?>
<project name="axia_app_2" default="build-parallel">
  <target name="build"
    depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpunit,phpcb"/>

  <target name="build-parallel"
    depends="prepare,lint,tools-parallel,phpunit,phpcb"/>

  <target name="tools-parallel" description="Run tools in parallel">
    <parallel threadCount="2">
    <sequential>
      <antcall target="prepare"/>
      <antcall target="pdepend"/>
      <antcall target="phpmd-ci"/>
    </sequential>
      <antcall target="phpcpd"/>
      <antcall target="phpcs-ci"/>
      <antcall target="phploc"/>
      <antcall target="phpdox"/>
    </parallel>
  </target>

  <target name="build-smoke">
    <antcall target="prepare"/>
    <antcall target="migrate"/>
    <antcall target="phpunit"/>
  </target>

  <target name="build-nightly">
    <antcall target="build-parallel"/>
  </target>

  <target name="clean"
    description="Cleanup build artifacts">
    <delete dir="${basedir}/build/api"/>
    <delete dir="${basedir}/build/code-browser"/>
    <delete dir="${basedir}/build/coverage"/>
    <delete dir="${basedir}/build/logs"/>
    <delete dir="${basedir}/build/pdepend"/>
    <delete dir="${basedir}/build/phpdox"/>
  </target>

  <target name="prepare" depends="clean"
    description="Prepare for build">
    <mkdir dir="${basedir}/build/api"/>
    <mkdir dir="${basedir}/build/code-browser"/>
    <mkdir dir="${basedir}/build/coverage"/>
    <mkdir dir="${basedir}/build/logs"/>
    <mkdir dir="${basedir}/build/pdepend"/>
    <mkdir dir="${basedir}/build/phpdox"/>
  </target>

  <target name="lint"
    description="Perform syntax check of sourcecode files">
    <apply executable="php" failonerror="true">
      <arg value="-l" />
      <fileset dir="${basedir}/app">
        <include name="**/*.php" />
        <exclude name="**/Lib/**" />
        <exclude name="**/Locale/**" />
        <exclude name="**/Plugin/**" />
        <exclude name="**/tmp/**" />
        <exclude name="**/vendor/**" />
        <exclude name="**/Vendor/**" />
        <modified />
      </fileset>
    </apply>
  </target>

  <target name="migrate">
    <exec executable="${basedir}/app/Console/cake" failonerror="false">
      <arg line="Migrations.migration status"/>
    </exec>
    <exec executable="${basedir}/app/Console/cake" failonerror="false">
      <arg line="Migrations.migration run all -q"/>
    </exec>
  </target>

  <target name="phploc"
    description="Measure project size using PHPLOC">
    <echo message="phploc --log-csv '${basedir}/build/logs/phploc.csv' '${basedir}/app'"/>
    <exec executable="bash">
      <arg value="-c"/>
      <arg value="phploc --log-csv '${basedir}/build/logs/phploc.csv' '${basedir}/app'"/>
    </exec>
  </target>

  <target name="pdepend"
    description="Calculate software metrics using PHP_Depend">
    <echo message="pdepend --summary-xml='${basedir}/build/pdepend/summary.xml' --jdepend-chart='${basedir}/build/pdepend/dependencies.svg' --overview-pyramid='${basedir}/build/pdepend/overview-pyramid.svg' --ignore=Console,Locale,Plugin,vendor,Vendor '${basedir}/app/'"/>
    <exec executable="bash">
      <arg value="-c"/>
      <arg value="pdepend --summary-xml='${basedir}/build/pdepend/summary.xml' --jdepend-chart='${basedir}/build/pdepend/dependencies.svg' --overview-pyramid='${basedir}/build/pdepend/overview-pyramid.svg' --ignore=Console,Locale,Plugin,vendor,Vendor '${basedir}/app/'"/>
    </exec>
  </target>

  <target name="phpmd"
    description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
    <echo message="phpmd '${basedir}/app/'' text codesize,unusedcode,naming --exclude 'Console,Plugin,tmp,vendor,Vendor' --reportfile '${basedir}/build/logs/phpmd.txt'"/>
    <exec executable="bash">
      <arg value="-c"/>
      <arg value="phpmd '${basedir}/app/' text codesize,unusedcode,naming --exclude 'Console,Plugin,tmp,vendor,Vendor' --reportfile '${basedir}/build/logs/phpmd.txt'"/>
    </exec>
  </target>

  <target name="phpmd-ci"
    description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
    <echo message="phpmd '${basedir}/app/' xml codesize,unusedcode,naming --exclude 'Console,Plugin,tmp,vendor,Vendor' --reportfile '${basedir}/build/logs/phpmd.xml'"/>
    <exec executable="bash">
      <arg value="-c"/>
      <arg value="phpmd '${basedir}/app/' xml codesize,unusedcode,naming --exclude 'Console,Plugin,tmp,vendor,Vendor' --reportfile '${basedir}/build/logs/phpmd.xml'"/>
    </exec>
  </target>

  <target name="phpcs"
    description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
    <echo message="phpcs -v -n --standard=CakePHP --report=summary --ignore=Console,Plugin,tmp,vendor,Vendor,webroot '${basedir}/app/'"/>
    <exec executable="bash">
      <arg value="-c"/>
      <arg value="phpcs -v -n --standard=CakePHP --report=summary --ignore=Console,Plugin,tmp,vendor,Vendor,webroot '${basedir}/app/'"/>
    </exec>
  </target>

  <target name="phpcs-ci"
    description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
    <echo message="phpcs -n --standard=CakePHP --ignore=Console,Plugin,tmp,vendor,Vendor,webroot --report-full='${basedir}/build/logs/phpcs_full.txt' '${basedir}/app/'"/>
    <exec executable="bash">
      <arg value="-c"/>
      <arg value="phpcs -n --standard=CakePHP --ignore=Console,Plugin,tmp,vendor,Vendor,webroot --report-full='${basedir}/build/logs/phpcs_full.txt' '${basedir}/app/'"/>
    </exec>
  </target>

  <target name="phpcpd"
    description="Find duplicate code using PHPCPD">
    <echo message="phpcpd --progress --exclude=Vendor --exclude=Plugin --exclude=vendor --log-pmd '${basedir}/build/logs/pmd-cpd.xml' '${basedir}/app'"/>
    <exec executable="bash">
      <arg value="-c"/>
      <arg value="phpcpd --progress --exclude=Vendor --exclude=Plugin --exclude=vendor --log-pmd '${basedir}/build/logs/pmd-cpd.xml' '${basedir}/app'"/>
    </exec>
  </target>

  <target name="phpdox" description="Generate API documentation using phpDox">
    <echo message="phpdox -f '${basedir}/build/phpdox.xml.dist'"/>
    <exec executable="bash">
      <arg value="-c"/>
      <arg value="phpdox -f '${basedir}/build/phpdox.xml.dist'" />
    </exec>
  </target>

  <target name="phpunit" description="Run unit tests with PHPUnit" depends="ensure-tmp-folders, migrate">
    <exec executable="bash" failonerror="true" dir="${basedir}/app">
      <arg value="Console/cake"/>
      <arg value="test"/>
      <arg value="app"/>
      <arg value="AllTests"/>
      <arg value="--stderr"/>
      <arg value="--coverage-html"/>
      <arg path="${basedir}/build/reports/coverage"/>
      <arg value="--coverage-clover"/>
      <arg path="${basedir}/build/reports/coverage-clover.xml"/>
    </exec>
  </target>

  <target name="ensure-tmp-folders">
    <mkdir dir="${basedir}/app/tmp/"/>
    <mkdir dir="${basedir}/app/tmp/cache"/>
    <mkdir dir="${basedir}/app/tmp/cache/persistent"/>
    <mkdir dir="${basedir}/app/tmp/cache/models"/>
    <mkdir dir="${basedir}/app/tmp/cache/views"/>
    <mkdir dir="${basedir}/app/tmp/logs"/>
    <mkdir dir="${basedir}/app/tmp/tests"/>
    <mkdir dir="${basedir}/app/tmp/sessions"/>
  </target>

  <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
    <echo message="phpcb --log '${basedir}/build/logs' --source '${basedir}/app' --output '${basedir}/build/code-browser'"/>
    <exec executable="bash">
      <arg value="-c" />
      <arg value="phpcb --log '${basedir}/build/logs' --source '${basedir}/app' --output '${basedir}/build/code-browser'" />
    </exec>
  </target>
</project>
